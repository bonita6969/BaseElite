-- This file was generated using Luraph Obfuscator v13.5.6

return(function(ED,lD,KD,XD,qD,wD,ID,ZD,vD,UD,nD,tD,ND,yD,MD,pD,HD,oD,AD,hD,WD,YD,LD,sD,FD,eD,DD,BD,uD,fD,bD,gD,QD,rD,jD,mD,dD,TD,cD,R,...)local z,O=select,(pcall);local i,VD,a,S,J,F,Z=dD,0X03,nil,nil,nil,nil,(nil);repeat if not(VD<=1)then if VD<=0X2 then do J=jD;end;VD=0;else if VD==3 then do a=FD;end;do VD=4;end;else S=uD;VD=2;end;end;else if VD~=0X000 then Z={[0x00]=1};break;else F=BD;do VD=1;end;end;end;until(false);local k,j,L=nil,nil,(nil);for cL=0X000,2 do if cL<=0 then k=string.byte;else if cL~=0X1 then L=rD;else j=LD.insert;end;end;end;local c=(bit or yD);local y=MD;VD=0;local d,T,h=nil,nil,nil;repeat if not(VD<=0)then do if VD~=1 then T={0X1,3,6};VD=1;else h=coroutine.yield;do VD=3;end;end;end;else d=hD.rep;VD=2;end;until VD==0X003;local E=getfenv;VD=0X00;local t,p=nil,nil;while VD~=2 do do if VD==0 then t=1;VD=0X001;else p=(E and E()or _ENV);VD=0X02;end;end;end;local A=(0x100000000);VD=2;local X,U,f,N,D,xD,K,u,W,PD,e,q=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;while VD<=0X0d do do if VD<=0X006 then if VD<=2 then if not(VD<=0X0)then if VD~=1 then X=A-1;VD=5;else u=hD.match;do VD=8;end;end;else do VD=4;end;end;elseif not(VD<=0X4)then if VD==0X5 then U=KD;VD=0;else e=2^52;do VD=0X03;end;end;else if VD~=0X0003 then U=F(a(U,5),bD,function(zz)do if k(zz,2)~=72 then local o7=(J(S(zz,ED)));if f then local Wk,kk=0X1,(nil);while Wk<=1 do if Wk~=0 then do kk=d(o7,f);end;Wk=0X0;else f=nil;Wk=0X00002;end;end;return kk;else return o7;end;else local Ay=0x0;while(true)do do if Ay~=0 then return"";else do f=S(a(zz,1,0X1));end;Ay=0X0001;end;end;end;end;end;end);VD=13;else q=D-0x1;VD=9;end;end;else do if VD<=0x9 then if VD<=0x00007 then K=pD or table.unpack;VD=0X0001;else if VD~=8 then do local WN=(nil);local KN=(0);while KN<2 do if KN~=0X00 then for Hw=tD,31 do Z[Hw]=WN;WN=WN*2;end;KN=0X0002;else WN=0x0002;KN=1;end;end;end;VD=14;else W=function()local s5,X5,K5,c5=nil,nil,nil,nil;for h6=0,0x1 do if h6==0 then s5,X5,K5,c5=k(U,t,t+3);else t=t+4;end;end;do return c5*0X0001000000+K5*65536+X5*0X100+s5;end;end;VD=0Xa;end;end;else if VD<=11 then if VD~=10 then xD={};VD=0X7;else PD={};VD=6;end;else if VD~=0Xc then N=function()local Uf=(k(U,t,t));t=t+0x1;return Uf;end;VD=0XC;else D=2147483648;do VD=11;end;end;end;end;end;end;end;end;local B=(setmetatable);VD=1;local Q,s,w,g,m=nil,nil,nil,nil,(nil);repeat if not(VD<=1)then if not(VD<=0x2)then if VD~=3 then do s=function()local vp,Sp=W(),W();if Sp>=D then do Sp=Sp-A;end;end;return Sp*A+vp;end;end;VD=0X00002;else m=c and c.bxor or function(G_,Z_)local z_=0X000;local H_=nil;while true do do if not(z_<=0)then if z_~=0x1 then Z_=Z_%A;break;else H_=0X1;do z_=0x2;end;end;else do G_=G_%A;end;z_=1;end;end;end;z_=1;local V_=nil;repeat if z_<=0 then return V_+G_*H_+Z_*H_;elseif z_~=0x1 then while G_>0X0 and Z_>0X0000 do local F7,h7,r7=G_%16,Z_%16,0X1;while r7~=4 do if r7<=1 then if r7==0 then H_=H_*0x0010;r7=0X00004;else V_=V_+w[F7][h7]*H_;r7=3;end;else if r7==0X0002 then Z_=(Z_-h7)/16;r7=0;else G_=(G_-F7)/0X00010;r7=2;end;end;end;end;z_=0X00000;else V_=0x0;z_=2;end;until false;end;VD=5;end;else w={[0X0000]={[0]=UD,0X1,fD,3,4,0X00005,6,ND,0X8,0x0009,10,0X0000B,12,0X000d,14,0XF},{[0]=0X001,0X0,3,2,5,4,7,0X6,9,0x8,11,10,13,0Xc,WD,0X0e},{[0]=2,3,0,1,6,ND,4,5,10,0X000b,DD,9,14,15,0x0000c,AD},{[0]=0X00003,2,tD,0,0X007,nD,0x5,0X04,0X000b,0X0000A,eD,DD,WD,XD,0Xd,12},{[0x0]=0X4,5,0X06,7,0,0X01,0X002,3,0Xc,13,14,15,DD,9,0XA,0X0b},{[0]=0X5,0X004,7,0X6,1,0,0X3,0X00002,13,0Xc,15,14,9,0X8,11,10},{[0]=0x006,7,0X4,0X00005,fD,0X00003,0X0,1,0XE,15,12,0X0000D,10,11,0X8,9},{[0]=0X07,6,0X5,0X4,0X003,0X00002,1,0,15,0X000e,0XD,0X0c,0x0000b,0xA,eD,8},{[0X0]=8,eD,0X00A,11,12,0XD,14,15,0,1,fD,3,4,5,6,7},{[0]=0X9,8,qD,10,13,0x0C,15,0XE,1,0X0,ZD,0X2,0X5,0x4,0x07,0X6},{[0]=QD,0X0000B,8,9,XD,15,12,13,fD,ZD,0,1,6,7,4,0x5},{[0x0]=0xb,0xA,eD,8,15,0X000E,0x0000d,0Xc,3,0X02,0X1,0X0000,7,nD,5,0X4},{[0]=0Xc,13,0XE,15,0X008,9,QD,11,4,5,0X0006,7,0X00,1,0X2,0X03},{[UD]=0XD,12,15,14,eD,8,0X0b,0XA,5,sD,7,0X006,1,0,3,2},{[0]=0X0E,WD,0XC,0XD,0X000A,0Xb,0X00008,0X9,0X006,7,4,0X5,0X2,0x3,0,0x1},{[0]=0x000f,0XE,0Xd,0X00c,11,10,9,8,7,6,5,0x00004,0X3,2,1,0X0}};VD=0X0;end;else do if VD~=0 then Q=function(ZT,ST,KT)local tT,rT=0X1,(nil);repeat if tT~=0X0 then do rT=(ZT/Z[ST])%Z[KT];end;do tT=0x0;end;else rT=rT-rT%0x1;tT=2;end;until tT>0x01;return rT;end;VD=4;else g=function()local vI,aI=nil,nil;local dI=(0);while dI~=2 do if dI==0X0 then vI=W();do dI=1;end;else do aI=W();end;dI=0X00002;end;end;do dI=0X0;end;local JI=nil;while dI~=2 do if dI~=0 then do JI=0X1;end;dI=2;else do if not(vI==0x00000 and aI==0X0)then else do return 0X0;end;end;end;do dI=1;end;end;end;local cI=((-0X01)^Q(aI,0X00001f,1));local GI=(Q(aI,0X0014,11));local sI=(Q(aI,0,0X14)*A+vI);if GI==0X0 then if sI==0 then return cI*0x00000;else GI=0X1;JI=0x0;end;else if GI==gD then if sI~=0 then return cI*(0x1/0);else return cI*(0/0X00000);end;end;end;return cI*(2^(GI-1023))*(sI/e+JI);end;do VD=0X0003;end;end;end;end;until VD==5;local P=type;local Y=c and c.band or function(N3,U3)local u3=0X0;repeat if u3~=0 then do U3=U3%A;end;u3=0x00002;else N3=N3%A;do u3=0X1;end;end;until u3>=0X2;do return((N3+U3)-m(N3,U3))/0x2;end;end;local l=c and c.bor or function(Hj,fj)local kj=0;while 0.04736374766795104 do if not(kj<=0)then if kj~=0x1 then do return X-Y(X-Hj,X-fj);end;else fj=fj%A;kj=0x2;end;else Hj=Hj%A;kj=1;end;end;end;local v=(c and c[wD]or function(m6)return X-(m6%A);end);local I=(c and c.rshift);local C=(assert);local o=c and c.lshift;do VD=0X0004;end;local M,H,V=nil,nil,nil;while VD<0X5 do if not(VD<=0X1)then do if not(VD<=2)then if VD~=0X0003 then o=o or function(jh,gh)local vh=0x1;while'\112\109H)\091\0915\055*'do if vh==0X0 then if gh<0 then return I(jh,-gh);end;break;else if not(gh>=0X20)then else return 0;end;vh=0x0;end;end;return(jh*Z[gh])%A;end;do VD=0X0;end;else do I=I or function(sI,QI)if not(QI>=32)then else return 0x0;end;if not(QI<0x0)then else return o(sI,-QI);end;local cI=(nil);local LI=(0);do while true do if LI==0 then cI=(sI%A/Z[QI]);do LI=0X1;end;else return cI-cI%1;end;end;end;end;end;do VD=0X1;end;end;else V=function()local Qn,cn=0,(0x00);while 0.3969277987177179 do local qU=k(U,t,t);t=t+1;Qn=l(Qn,o(Y(qU,0X007F),cn));if Y(qU,0X80)==0 then do return Qn;end;end;cn=cn+0X7;end;end;do VD=0X5;end;end;end;else do if VD==0X0 then M=cD;VD=3;else H={[0X0]=1,[0X9]=0X0,[fD]=4,[0X7]=0X00000,[7]=0x8,[eD]=0X3,[3]=0x4,[8]=7,[mD]=0X7,[2]=0,[0X1]=5,[6]=2};VD=0X002;end;end;end;end;VD=1;local r,G=nil,nil;do repeat if VD~=0X0000 then r=YD;VD=0X0;else do G=function()local aX=(0X1);local pX=(nil);repeat if not(aX<=0X0)then if aX~=0X1 then if not(pX>q)then else do return pX-A;end;end;do aX=0x0;end;else pX=V();aX=0x2;end;else return pX;end;until(false);end;end;VD=2;end;until VD>1;end;local x=(error);local RD=N();local CD=N();local zD=(function(bu)local yu=({k(U,t,t+3)});local du=(m(yu[1],CD));local Nu,Cu,Ou,Bu=0,nil,nil,(nil);while Nu<0X3 do do if not(Nu<=0)then if Nu~=0X1 then Ou=m(yu[0X3],CD);do Nu=0X0001;end;else do Bu=m(yu[0X0004],CD);end;Nu=0X3;end;else Cu=m(yu[2],CD);do Nu=0X2;end;end;end;end;CD=(lD*CD+bu)%0X100;t=t+0X04;do return Bu*0x1000000+Ou*65536+Cu*vD+du;end;end);local b=(setfenv);local OD=(function(...)return z("#",...),{...};end);local SD=function(kh)local Nh,dh=nil,nil;local Eh=(0X00003);repeat do if Eh<=1 then if Eh~=0 then for c1=1,Nh,7997 do local W1,r1,I1=0X01,nil,(nil);do while""do if W1<=1 then if W1~=0x00 then r1=c1+0X1F3d-1;W1=0x3;else do I1={k(U,t+c1-0X1,t+r1-1)};end;do W1=2;end;end;elseif not(W1<=2)then if W1==0x3 then if r1>Nh then r1=Nh;end;W1=0;else dh=dh..J(K(I1));do break;end;end;else do for PP=1,#I1 do do I1[PP]=m(I1[PP],RD);end;RD=(kh*RD+29)%0X100;end;end;W1=4;end;end;end;end;Eh=0X002;else return dh;end;else do if not(Eh<=2)then if Eh~=0x3 then dh='';Eh=0x001;else do Nh=W();end;Eh=0X4;end;else t=t+Nh;Eh=0X0;end;end;end;end;until(false);end;local iD,aD,kD,JD=nil,nil,nil,nil;do for TS=0,0X4 do if not(TS<=1)then if not(TS<=2)then if TS~=3 then JD=kD();else function kD()local F6,C6={oD,nil,nil,{},{},oD,{},oD,nil},(2);local r6,h6,Q6=nil,nil,nil;repeat if not(C6<=0X0)then if C6~=1 then r6={};C6=1;else h6=F6[5];do C6=0X0;end;end;else Q6=W()-45108;C6=3;end;until C6>=0X03;C6=0x0;local H6=nil;while C6<=1 do if C6~=0 then for wY=0X1,Q6 do(h6)[wY]={[0X7]=V(),[fD]=N(),[3]=G(),[6]=G(),[0X5]=N(),[0X1]=G(),[4]=N()};end;C6=2;else H6=1;C6=1;end;end;F6[0X0000D]=N();do(F6)[0x0B]=W();end;C6=0x4;local a6,Z6,D6,J6=nil,nil,nil,(nil);repeat do if C6<=0X00002 then do if C6<=0 then J6=N()~=0;C6=3;else if C6==0X0001 then do a6=W()-22071;end;C6=2;else Z6={};C6=5;end;end;end;else if not(C6<=3)then if C6~=0x4 then D6=N();C6=0x00;else F6[1]=V();C6=0X1;end;else for wm=0X001,a6 do local lm,Xm,Im=2,nil,nil;while lm~=0X3 do if lm<=0 then do(Z6)[wm-1]=H6;end;lm=0X3;else if lm~=0X1 then Xm=oD;lm=1;else do Im=N();end;do lm=0;end;end;end;end;if Im==0X00C0 then do Xm=a(SD(D6),N());end;elseif Im==0XE7 then do Xm=false;end;elseif Im==0X1a then do Xm=g();end;elseif Im==97 then Xm=a(SD(D6),18);elseif Im==0X80 then Xm=s();elseif Im==168 then do Xm=ID;end;elseif Im==0X5c then Xm=s();elseif Im==177 then do Xm=a(SD(D6),0X00003);end;elseif Im~=209 then else Xm=W();end;local Km=({Xm,{}});for lA=0,2 do if lA<=0X000 then r6[H6]=Km;else if lA~=0x0001 then if J6 then local Bp=(1);while(true)do if Bp==0 then iD=iD+0x01;break;else do PD[iD]=Km;end;Bp=0;end;end;end;else H6=H6+0x1;end;end;end;end;C6=0X6;end;end;end;until C6>=6;C6=0X0004;local p6,L6,n6,z6=nil,nil,nil,nil;do repeat do if not(C6<=0X6)then if C6<=0x00a then if not(C6<=8)then if C6==9 then F6[0X8]=V();do C6=0X0000d;end;else L6=N();C6=0x1;end;else do if C6~=7 then do n6=W()-0Xc676;end;C6=14;else do(F6)[0X003]=V();end;C6=0X0;end;end;end;else if not(C6<=12)then if C6~=0XD then do z6=F6[4];end;C6=6;else p6={};C6=5;end;else if C6==0XB then do for A8=0X1,V()do(p6)[A8]={N(),V()};end;end;C6=0X00A;else F6[0X06]=Q(L6,0X002,tD)~=UD;do C6=3;end;end;end;end;else if C6<=2 then if not(C6<=0X00000)then if C6~=0X1 then F6[9]=p6;C6=11;else F6[0X0002]=Q(L6,1,1)~=UD;do C6=12;end;end;else for TY=1,Q6 do local AY=(F6[5][TY]);for ck,Nk in TD(T)do local dk,uk,nk=0,nil,nil;repeat if dk<=0X0 then uk=H[Nk];dk=0X0002;else do if dk==0X1 then do if nk==11 then local dK,oK,TK=0X0,nil,(nil);do while dK~=0X3 do do if not(dK<=0)then do if dK==1 then TK=r6[oK];do dK=2;end;else if not(TK)then else local n2,R2=0X01,(nil);repeat if not(n2<=0)then if n2~=1 then do R2[#R2+0X1]={AY,uk};end;n2=0X00003;else(AY)[uk]=TK[0x1];n2=0;end;else R2=TK[2];n2=0X2;end;until n2>=0X03;end;dK=0x0003;end;end;else oK=Z6[AY[Nk]];do dK=1;end;end;end;end;end;elseif nk~=0xE then else do AY[Nk]=TY+AY[Nk]+1;end;end;end;dk=3;else nk=AY[uk];dk=1;end;end;end;until dk>=0X3;end;end;C6=0X00009;end;else if not(C6<=0X04)then if C6==0x00005 then F6[HD]=N();C6=0x00002;else do for Lw=0X00000,n6-1 do(z6)[Lw]=kD();end;end;break;end;else if C6==0X3 then(F6)[15]=W();C6=8;else(F6)[0X000f]=W();C6=0X07;end;end;end;end;end;until false;end;C6=0X2;local y6=nil;repeat do if C6<=2 then if not(C6<=0x0)then if C6==1 then y6=W();C6=0x5;else do F6[AD]=N();end;C6=1;end;else F6[16]=N();C6=4;end;else do if C6<=0x4 then if C6==3 then(F6)[0X00e]=W();C6=0;else return F6;end;else do if C6~=0X5 then(F6)[10]=N();do C6=3;end;else for tV=1,y6 do local YV,xV,FV,bV=1,nil,nil,(nil);repeat if not(YV<=1)then if YV~=0X00002 then FV=W();YV=0x2;else do bV=W();end;do YV=0X00;end;end;else if YV~=0X0 then xV=W();YV=3;else for Hh=xV,FV do F6[7][Hh]=bV;end;YV=4;end;end;until YV>=0X4;end;C6=6;end;end;end;end;end;end;until false;end;end;else function aD(wM,UM,iM)local JM,XM=UM[0X06],UM[0X003];local KM=(UM[5]);local hM,yM,OM,CM=UM[0X8],UM[1],UM[7],UM[0X0002];local tM=(UM[4]);local oM=B({},{__mode="\118"});local sM=(nil);sM=function(...)local wf,Mf,of=1,{},0X0;local vf={[0X0001]=UM,[0X2]=Mf};local Qf=((E and E()or _ENV));local Jf,Of=OD(...);local Rf=(Qf==p and wM or Qf);do Jf=Jf-1;end;for Wh=0,Jf do if not(hM>Wh)then break;else Mf[Wh]=Of[Wh+1];end;end;if not CM then Of=nil;else if JM then do(Mf)[hM]={n=Jf>=hM and Jf-hM+1 or 0X0,K(Of,hM+0x1,Jf+0x1)};end;end;end;if Rf~=Qf then if b then b(sM,Rf);else do _ENV=Rf;end;end;end;local zf,jf,gf,uf=O(function()while"\094\045"do local YX=KM[wf];local LX=(YX[0X7]);do wf=wf+1;end;if not(LX>=48)then if not(LX<24)then if not(LX>=0x24)then do if not(LX>=30)then if not(LX>=0X1b)then do if LX>=25 then if LX~=26 then local FP=(YX[0X001]);(Mf)[YX[0X6]]=Mf[FP]..Mf[FP+0X1];else Mf[YX[6]]=Mf[YX[1]][Mf[YX[3]]];end;else local SF=(YX[6]);(Mf)[SF]=Mf[SF](Mf[SF+0X00001],Mf[SF+0x02]);of=SF;end;end;else if not(LX>=28)then repeat local KI,MI=oM,Mf;if#KI>0 then local BL=({});for vi,mi in y,KI do for oT,WT in y,mi do if WT[1]==MI and WT[0X002]>=0 then local M9=(WT[0X2]);if not BL[M9]then do BL[M9]={MI[M9]};end;end;do WT[0X1]=BL[M9];end;(WT)[0x0002]=0x1;end;end;end;end;until true;do return;end;else do if LX~=29 then repeat local ep,Jp=oM,Mf;do if not(#ep>0)then else local Ll=({});for R2,e2 in y,ep do for Yf,Bf in y,e2 do if Bf[1]==Jp and Bf[2]>=0X0 then local Wa=Bf[0X002];do if not(not Ll[Wa])then else do Ll[Wa]={Jp[Wa]};end;end;end;Bf[1]=Ll[Wa];(Bf)[2]=1;end;end;end;end;end;until true;return true,YX[0X6],0X0001;else(Mf)[YX[0x06]]=l(Mf[YX[0X001]],Mf[YX[0X3]]);end;end;end;end;else if not(LX<0x00021)then do if not(LX>=34)then if YX[0X3]~=0XB0 then do repeat local cL,sL=oM,Mf;do if#cL>0X00 then local GD=({});do for ff,df in y,cL do for Z8,L8 in y,df do if not(L8[0X1]==sL and L8[2]>=0x0)then else local p8=L8[0X2];if not(not GD[p8])then else(GD)[p8]={sL[p8]};end;L8[1]=GD[p8];(L8)[0X2]=0X1;end;end;end;end;end;end;until true;end;return false,YX[0X6],of;else do wf=wf-0X1;end;KM[wf]={[7]=53,[0X1]=(YX[0X1]-199),[0X006]=(YX[0X6]-0x0000c7)};end;else if LX~=0X023 then of=YX[0x006];(Mf)[of]=Mf[of]();else Mf[YX[6]]=Mf[YX[1]]^Mf[YX[3]];end;end;end;else if not(LX<0X1F)then if LX==0X0020 then local uH=YX[6];of=uH+YX[0X0001]-1;(Mf[uH])(K(Mf,uH+1,of));of=uH-0x01;else(Mf)[YX[6]]=YX[5];end;else do(Mf)[YX[0X006]]={};end;end;end;end;end;else if not(LX<42)then if not(LX<45)then do if LX<0X2e then local NV=(YX[0X6]);do for oZ=NV,NV+(YX[1]-1)do(Mf)[oZ]=Of[hM+(oZ-NV)+1];end;end;else if LX==0X2f then local sG,kG=tM[YX[0x1]],nil;local TG=(sG[0X009]);local HG=#TG;if HG>0 then kG={};for uc=0X00001,HG do local yc=(TG[uc]);if yc[1]==0X000 then do(kG)[uc-0x001]={Mf,yc[0X002]};end;else kG[uc-0x001]=iM[yc[0X2]];end;end;(j)(oM,kG);end;(Mf)[YX[6]]=aD(Rf,sG,kG);else Mf[YX[6]]=false;end;end;end;else do if not(LX<0X2B)then if LX~=0x00002c then(Mf)[YX[6]]=vf[YX[1]];else local RO=(YX[0X1]);local GO=Mf[RO];for Hm=RO+1,YX[0X3]do GO=GO..Mf[Hm];end;Mf[YX[0X0006]]=GO;end;else do repeat local lU,JU=oM,Mf;if#lU>0X0 then local o_={};for HS,oS in y,lU do for fB,AB in y,oS do do if not(AB[0x01]==JU and AB[2]>=0)then else local Il=(AB[0x2]);do if not(not o_[Il])then else do(o_)[Il]={JU[Il]};end;end;end;AB[0x1]=o_[Il];do(AB)[0X00002]=1;end;end;end;end;end;end;until true;end;do return true,YX[0X06],0;end;end;end;end;else do if LX<39 then if LX>=0X25 then if LX~=0X026 then local Qw=YX[6];Mf[Qw](Mf[Qw+1]);of=Qw-1;else Mf[YX[6]]=m(Mf[YX[1]],Mf[YX[3]]);end;else do if YX[0X003]~=115 then Mf[YX[6]]=Mf[YX[0X1]];else wf=wf-1;KM[wf]={[0x006]=(YX[0x0006]-123),[0x7]=0X21,[1]=(YX[1]-0X007b)};end;end;end;else if not(LX<40)then if LX~=0x29 then local xj=(YX[6]);local Wj,yj=Mf[xj]();do if Wj then for Hm=0x1,YX[3]do(Mf)[xj+Hm]=yj[Hm];end;wf=YX[1];end;end;else(Mf)[YX[6]]=Mf[YX[0X1]]%YX[4];end;else(vf)[YX[1]]=Mf[YX[0x6]];end;end;end;end;end;else if not(LX<12)then if LX>=18 then do if not(LX<21)then do if not(LX>=22)then local BY=(YX[6]);local RY=(M(function(...)(h)();for xl,Sl,Xl,kl,Wl,il,Ll,gl,vl,Il in...do h(true,{xl,Sl,Xl,kl,Wl,il,Ll,gl,vl,Il});end;end));RY(Mf[BY],Mf[BY+1],Mf[BY+2]);of=BY;Mf[BY]=RY;wf=YX[1];else if LX==23 then do Mf[YX[6]]=Mf[YX[0x1]]<=Mf[YX[0x3]];end;else do(Mf)[YX[0X06]]=Mf[YX[1]]<Mf[YX[0X3]];end;end;end;end;else if LX<0X13 then local bV=(YX[0x6]);local tV,zV=Mf[bV]();if tV then(Mf)[bV+1]=zV;wf=YX[1];end;else do if LX~=20 then do wf=YX[1];end;else Mf[YX[6]]=v(Mf[YX[0X1]]);end;end;end;end;end;else if not(LX>=15)then do if not(LX>=0XD)then(Mf)[YX[6]]=Mf[YX[1]]>Mf[YX[0x3]];else if LX~=14 then if not(Mf[YX[0X001]]<=Mf[YX[3]])then else wf=YX[6];end;else local i8=(YX[6]);local S8=(Mf[i8]);local h8=(YX[3]-0X1)*50;do for P7=0X1,YX[1]do S8[h8+P7]=Mf[i8+P7];end;end;end;end;end;else if LX>=0X000010 then do if LX~=17 then(Mf)[YX[6]]=Mf[YX[0x001]]-Mf[YX[0x3]];else if not(Mf[YX[0X1]]<Mf[YX[0x3]])then else wf=YX[6];end;end;end;else do if not(Mf[YX[0X6]])then else wf=YX[0X001];end;end;end;end;end;else do if LX<6 then if LX<3 then if LX<0X1 then local ir=(YX[6]);Mf[ir](K(Mf,ir+1,of));of=ir-1;else if LX==2 then(Mf)[YX[6]]=true;else local W6,R6=YX[6],Mf[YX[1]];do(Mf)[W6+0x1]=R6;end;(Mf)[W6]=R6[YX[4]];end;end;else if not(LX>=4)then local K8=YX[0x06];Mf[K8]=Mf[K8](K(Mf,K8+1,of));of=K8;else if LX==0X5 then local nU=iM[YX[1]];(Mf)[YX[0X6]]=nU[1][nU[2]];else local c_,I_=YX[0X6],(YX[1]);of=c_+I_-1;repeat local bN,ZN=oM,(Mf);if not(#bN>0)then else local S1=({});for RQ,aQ in y,bN do do for VX,IX in y,aQ do if not(IX[0X1]==ZN and IX[2]>=0X0)then else local bh=(IX[2]);if not S1[bh]then do(S1)[bh]={ZN[bh]};end;end;IX[1]=S1[bh];(IX)[0X00002]=0X1;end;end;end;end;end;until true;return true,c_,I_;end;end;end;else if LX<0x9 then if LX<0X00007 then do if YX[0x3]==98 then wf=wf-0X1;(KM)[wf]={[6]=(YX[6]-216),[1]=(YX[0x1]-0XD8),[0X07]=36};elseif YX[0x3]~=242 then local tl,cl=YX[0x06],Jf-hM;if cl<0X0000 then cl=-0X01;end;for uS=tl,tl+cl do(Mf)[uS]=Of[hM+(uS-tl)+1];end;do of=tl+cl;end;else wf=wf-1;do KM[wf]={[0X1]=(YX[0X1]-183),[0X7]=0X53,[0X06]=(YX[6]-0xb7)};end;end;end;else if LX==0X08 then local CV=YX[0x6];local fV=M(function(...)h();do for td,Pd in...do(h)(true,td,Pd);end;end;end);(fV)(Mf[CV],Mf[CV+0x01],Mf[CV+0x2]);of=CV;do Mf[CV]=fV;end;wf=YX[1];else(Mf)[YX[6]]=Rf[YX[0X0005]];end;end;else if LX>=0xa then if LX==11 then if Mf[YX[1]]~=Mf[YX[3]]then else wf=YX[0X00006];end;else Mf[YX[0X6]][Mf[YX[1]]]=Mf[YX[0x3]];end;else(Mf[YX[6]])[YX[5]]=YX[4];end;end;end;end;end;end;else if LX<0X48 then if not(LX>=60)then if not(LX<54)then if LX<0X0039 then if LX<55 then local gI=YX[0x6];local aI,eI=Mf[gI],(YX[3]-0X1)*50;for ce=0x1,of-gI do aI[eI+ce]=Mf[gI+ce];end;else if LX~=0x038 then if Mf[YX[0x1]]~=YX[4]then do wf=YX[0X6];end;end;else local M5=Mf[YX[0X00001]]/Mf[YX[3]];Mf[YX[0x6]]=M5-M5%1;end;end;else if LX>=0X3a then do if LX~=0X03B then do Mf[YX[6]]=o(Mf[YX[1]],Mf[YX[0x3]]);end;else do Mf[YX[6]]=Mf[YX[0X0001]]*Mf[YX[3]];end;end;end;else do Mf[YX[6]]=I(Mf[YX[0X1]],Mf[YX[3]]);end;end;end;else do if not(LX>=0X00033)then do if LX>=0X31 then if LX==0X032 then Mf[YX[0X6]][Mf[YX[1]]]=YX[0X4];else local Wu=(YX[0X006]);Mf[Wu](Mf[Wu+1],Mf[Wu+0X00002]);do of=Wu-0X01;end;end;else Mf[YX[6]]=#Mf[YX[1]];end;end;else if not(LX>=52)then do(Mf)[YX[0X006]]=Mf[YX[1]]==Mf[YX[3]];end;else if LX~=53 then local YQ=(YX[0X6]);local VQ,KQ=Mf[YQ+0X1],Mf[YQ+0X2];local qQ=(Mf[YQ]);(Mf)[YQ]=M(function()for JB=qQ,VQ,KQ do(h)(true,JB);end;end);wf=YX[1];else do if YX[0X3]==0xC7 then wf=wf-0X1;do(KM)[wf]={[7]=27,[0X00001]=(YX[0X1]-80),[6]=(YX[0x6]-80)};end;elseif YX[3]==68 then wf=wf-0X001;do KM[wf]={[7]=27,[6]=(YX[0X6]-0X86),[0X1]=(YX[1]-134)};end;elseif YX[0X0003]~=42 then Mf[YX[0X6]]=-Mf[YX[0X1]];else wf=wf-1;KM[wf]={[7]=33,[0x6]=(YX[0x6]-0xCe),[0X01]=(YX[0X0001]-206)};end;end;end;end;end;end;end;else if LX<0X42 then do if LX<0X03f then if not(LX>=0X3D)then do Mf[YX[6]]=Mf[YX[0X001]]>=Mf[YX[3]];end;else if LX==62 then Mf[YX[6]]=Mf[YX[1]][YX[4]];else Mf[YX[0X6]]=YX[0x5];end;end;else if not(LX<0x40)then do if LX==0x41 then repeat local GA,CA,uA=oM,Mf,(YX[6]);do if not(#GA>0)then else local VL={};for HH,uH in y,GA do do for wT,YT in y,uH do if YT[1]==CA and YT[0x2]>=uA then local nO=(YT[0X2]);if not VL[nO]then(VL)[nO]={CA[nO]};end;(YT)[1]=VL[nO];(YT)[0X2]=1;end;end;end;end;end;end;until true;else if not(Mf[YX[1]]<Mf[YX[0X3]])then wf=YX[0X6];end;end;end;else local h5=(YX[0X003]);local f5,H5=YX[6],YX[0X1];if H5==0 then else of=f5+H5-0X001;end;local n5,K5=nil,nil;if H5~=0X1 then do n5,K5=OD(Mf[f5](K(Mf,f5+0X1,of)));end;else n5,K5=OD(Mf[f5]());end;if h5~=1 then if h5~=0x0 then n5=f5+h5-0X2;of=n5+0X1;else n5=n5+f5-0x1;of=n5;end;local lp=(0);for BQ=f5,n5 do lp=lp+1;Mf[BQ]=K5[lp];end;else of=f5-0X1;end;end;end;end;else if not(LX>=0X0045)then do if not(LX>=0x00043)then Mf[YX[0X6]]=xD[YX[1]];else if LX~=0X00044 then Mf[YX[0X6]]=Mf[YX[1]]-YX[4];else local hb=YX[6];do(Mf)[hb]=Mf[hb](Mf[hb+0X0001]);end;of=hb;end;end;end;else do if LX>=70 then if LX~=71 then if YX[3]==0X75 then wf=wf-1;do KM[wf]={[6]=(YX[6]-0xa4),[1]=(YX[1]-0xA4),[0x00007]=0X21};end;elseif YX[3]~=52 then if not(not Mf[YX[0x00006]])then else do wf=YX[0X00001];end;end;else do wf=wf-1;end;do(KM)[wf]={[0x1]=(YX[1]-154),[0X7]=0X005a,[0X0006]=(YX[6]-0X9a)};end;end;else local Y1=(YX[0X6]);local O1,z1=Mf[Y1]();do if not(O1)then else wf=YX[1];(Mf)[Y1+0X00003]=z1;end;end;end;else do(Mf)[YX[6]]=Mf[YX[0X1]]+YX[0X4];end;end;end;end;end;end;else do if not(LX<0x54)then do if LX>=0x5a then if LX<93 then if not(LX<91)then do if LX==92 then Mf[YX[0X6]]=Mf[YX[0X1]]+Mf[YX[3]];else for mn=YX[0X6],YX[1]do do Mf[mn]=nil;end;end;end;end;else if YX[0X0003]==233 then do wf=wf-1;end;do(KM)[wf]={[0x1]=(YX[1]-13),[6]=(YX[6]-0xD),[0X7]=0x1B};end;elseif YX[3]==60 then wf=wf-0X1;KM[wf]={[1]=(YX[0X01]-14),[7]=0x24,[0x00006]=(YX[6]-0XE)};else Mf[YX[6]]=nil;end;end;else if not(LX>=94)then xD[YX[1]]=Mf[YX[6]];else do if LX~=0X5f then local pj=YX[6];local cj=M(function(...)h();do for S6 in...do(h)(true,S6);end;end;end);(cj)(Mf[pj],Mf[pj+0X1],Mf[pj+0x02]);of=pj;do(Mf)[pj]=cj;end;wf=YX[1];else Mf[YX[6]]=Mf[YX[1]]~=YX[4];end;end;end;end;else if LX<0X57 then if LX>=85 then if LX~=0X56 then Mf[YX[0X6]]=Y(Mf[YX[1]],Mf[YX[0X3]]);else(Mf)[YX[0x6]]=Mf[YX[0X1]]%Mf[YX[3]];end;else if not(not(YX[0X5]<Mf[YX[3]]))then else wf=YX[6];end;end;else if not(LX<88)then if LX~=89 then Mf[YX[0X6]]={K({},1,YX[0x001])};else if not(not(Mf[YX[0X1]]<=Mf[YX[0X0003]]))then else wf=YX[0x0006];end;end;else local li=(iM[YX[0X1]]);li[1][li[2]]=Mf[YX[6]];end;end;end;end;else do if not(LX>=78)then do if LX>=75 then do if LX<0X4C then if Mf[YX[0X0001]]~=Mf[YX[3]]then wf=YX[6];end;else if LX~=0X4D then of=YX[0X006];Mf[of]();do of=of-1;end;else if not(not(Mf[YX[1]]<=YX[0x4]))then else wf=YX[0x6];end;end;end;end;else if LX>=73 then if LX~=0X4A then do(Mf)[YX[0X6]]=Mf[YX[0X1]]~=Mf[YX[0X3]];end;else if YX[0X0003]==67 then wf=wf-1;do KM[wf]={[0x1]=(YX[0X1]-67),[0X7]=6,[6]=(YX[6]-67)};end;elseif YX[3]==95 then do wf=wf-1;end;do(KM)[wf]={[7]=36,[1]=(YX[0X1]-215),[6]=(YX[6]-0X0000D7)};end;elseif YX[3]~=0xf7 then do repeat local DJ,QJ=oM,Mf;do if#DJ>0X000 then local AF=({});for Xg,wg in y,DJ do for Oa,Ma in y,wg do if Ma[0X1]==QJ and Ma[0X2]>=0 then local cE=Ma[2];if not AF[cE]then(AF)[cE]={QJ[cE]};end;do(Ma)[0X1]=AF[cE];end;(Ma)[2]=0x0001;end;end;end;end;end;until true;end;local dj=(YX[6]);return false,dj,dj;else do wf=wf-0x1;end;KM[wf]={[0X6]=(YX[0X6]-0X54),[1]=(YX[1]-0X54),[0X7]=90};end;end;else Mf[YX[0X006]]=Mf[YX[0x0001]]/Mf[YX[0X3]];end;end;end;else if LX>=81 then if LX>=0X052 then if LX~=83 then do if YX[3]~=0X00025 then do Mf[YX[0X6]]=not Mf[YX[1]];end;else wf=wf-0X1;(KM)[wf]={[0X6]=(YX[6]-142),[0X00007]=48,[1]=(YX[1]-142)};end;end;else if YX[3]==0X4d then wf=wf-1;(KM)[wf]={[0X00007]=36,[6]=(YX[0X0006]-0x0000c2),[0x1]=(YX[1]-0x00c2)};elseif YX[3]==110 then wf=wf-0x00001;KM[wf]={[7]=0X001B,[0X0001]=(YX[1]-0x4C),[0x06]=(YX[0X6]-0X004C)};else repeat local uj,Ij=oM,(Mf);if#uj>0X0 then local XX={};for rc,Ec in y,uj do for no,to in y,Ec do if not(to[1]==Ij and to[0X002]>=0x0)then else local PK=to[0X2];do if not XX[PK]then(XX)[PK]={Ij[PK]};end;end;to[1]=XX[PK];do to[0X2]=0X01;end;end;end;end;end;until true;local Gj=YX[6];return false,Gj,Gj+YX[1]-0X002;end;end;else(Mf[YX[0X6]])[YX[5]]=Mf[YX[0X3]];end;else if not(LX<79)then if LX~=0X000050 then local uz=YX[6];local hz,Hz,wz=Mf[uz]();if hz then do Mf[uz+1]=Hz;end;(Mf)[uz+0X2]=wz;wf=YX[1];end;else if Mf[YX[1]]~=YX[4]then else wf=YX[0X6];end;end;else do(Rf)[YX[5]]=Mf[YX[6]];end;end;end;end;end;end;end;end;end;end;end);if not(zf)then do if P(jf)~="string"then x(jf,0);else do if not(u(jf,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if u(jf,"^.-:%d+: ")then(x)('Lu\114a\112h \083cr\105pt\058'..(OM[wf-1]or"(in\116\101\114\110\097\108)")..": "..i(jf),0X0000);else(x)(jf,0X0);end;end;end;else if jf then do if uf==0X1 then return Mf[gf]();else do return Mf[gf](K(Mf,gf+0x00001,of));end;end;end;else if not(gf)then else return K(Mf,gf,uf);end;end;end;end;if not(b)then else b(sM,wM);end;do return sM;end;end;end;else do if TS~=0X0 then else do iD=1;end;end;end;end;end;end;for sL=0X00000,1 do if sL~=0 then PD=oD;else do xD[0X1]=PD;end;end;end;return aD(p,JD,oD)(...);ende,0xb,'bno\116',true,3,0x0000100,0,6,1,7,bit32,next,unpack,0X12,nil,0X00d,string,15,rawset,table,0x4,string.sub,0X9,8,string.gsub,tonumber,2,'.\046',2047,10,rawget,string.char,0X5,tostring,ipairs,coroutine.wrap,{0x0302B,0x1CC44efd,2978673952,0XeDA52ede,0X3A6f0FaE,0X56490f1D,0X00ed5e0b5b,0X000286568A2,3609198024},...);